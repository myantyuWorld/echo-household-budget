openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /line/login:
    get:
      tags:
        - LINE
      summary: LINEログイン
      description: LINEログイン
      responses:
        200:
          description: 
            LINE認証画面に遷移し、ログインに成功した場合、LINE Developerにて指定したCallbackURLに遷移する。
            CallBackURLに遷移後、システムに該当するLINEUserIDにひもづくユーザー情報が存在しない場合、ユーザー登録を行い、
            フロントエンドのホーム画面にリダイレクトを行う
  /line/me:
    get:
      tags:
        - LINE
      summary: LINEログイン
      description: LINEログイン
      responses:
        200:
          $ref: '#/components/responses/FetchMe'
        400:
          $ref: '#/components/responses/UnauthorizedError'
  /line/logout:
    post:
      tags:
        - LINE
      summary: LINEログアウト
      description: LINEログアウト
      responses:
        200:
          description: OK
  /kaimemo:
    get:
      tags:
        - 買い物メモ
      summary: 買い物一覧取得
      description: 全件取得する
      parameters:
        - in : query
          name: tempUserID
          schema:
            type: string
            required:
              - tempUserID
      responses:
        200: 
          $ref: '#/components/responses/GetKaimemos'
    post:
      tags:
        - 買い物メモ
      summary: 買い物追加
      description: 買い物を追加する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                tempUserID:
                  type: string
                name:
                  type: string
                tag:
                  type: string
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
  /kaimemo/{id}:
    delete:
      tags:
        - 買い物メモ
      summary: 買い物削除
      description: 買い物を削除する
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                tempUserID:
                  type: string
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
  /kaimemo/summary:
    get:
      tags:
        - 買い物集計
      summary: 買い物集計
      description: 買い物を集計する
      parameters:
        - in : query
          name: tempUserID
          schema:
            type: string
            required:
              - tempUserID
      responses:
        200:
          $ref: '#/components/responses/GetKaimemoSummary'
    post:
      tags:
        - 買い物集計
      summary: 買い物集計
      description: 買い物を集計する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                tempUserID:
                  type: string
                tag : 
                  type: string
                  example: 食費
                date:
                  type: string
                  example: '2020-01-01'
                amount:
                  type: integer
                  example: 1000
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
  /kaimemo/summary/{id}:
    delete:
      tags:
        - 買い物集計
      summary: 買い物削除
      description: 買い物を削除する
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                tempUserID:
                  type: string
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
  /household/{id}:
    get:
      tags:
        - 家計簿
      summary: 家計簿取得
      description: 家計簿を取得する
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          $ref: '#/components/responses/GetHousehold'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
  /household/share:
    post:
      tags:
        - 家計簿
      summary: 家計簿共有
      description: 家計簿を共有する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                householdID:
                  type: integer
                inviteUserID:
                  type: integer
      responses:
        200:
          description: OK
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        default:
          $ref: '#/components/responses/GeneralError'
components:
  responses:
    FetchMe:
      description: ユーザー情報取得
      content:
        application/json:
          schema:
            type : object
            $ref: '#/components/schemas/FetchMe'
    GetKaimemoSummary:
      description: 週次集計
      content:
        application/json:
          schema:
            type : object
            $ref: '#/components/schemas/KaimemoSummary'
    GetKaimemos:
      description: 買い物一覧取得
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Kaimemo'
    UnauthorizedError:
      description: Access token is missing or invalid
    NotFoundError:
      description: The specified resource was not found
    GeneralError:
      description: Unexpected error
    GetHousehold:
      description: 家計簿取得
      content:
        application/json:
          schema:
            type : object
            $ref: '#/components/schemas/HouseholdBook'
  schemas:
    UserAccount:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pictureURL:
          type: string
    FetchMe:
      type: object
      properties:
        id:
          type: integer
        userID:
          type: string
        name:
          type: string
        pictureURL:
          type: string
        householdBooks:
          type: array
          items:
            $ref: '#/components/schemas/HouseholdBook'
    KaimemoSummary:
      type: object
      properties:
        monthlySummaries:
          type: array
          items:
            $ref: '#/components/schemas/MonthlySummary'
        weeklySummaries:
          type: array
          items:
            $ref: '#/components/schemas/WeeklySummary'
    TagSummary:
      type: object
      additionalProperties:
        type: integer
    MonthlySummary:
      type: object
      properties:
        month:
          type: string
        totalAmount:
          type: integer
          example: 10000
        tagSummary :
          $ref: '#/components/schemas/TagSummary'
    WeeklySummary:
      type: object
      properties:
        weekStart:
          type: string
        weekEnd:
          type: string
        totalAmount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/KaimemoAmount'
    KaimemoAmount:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          example: '2020-01-01'
        tag:
          type: string
          example: 食費
        amount:
          type: integer
          example: 1000
    Kaimemo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tag:
          type: string
        done:
          type: boolean
    HouseholdBook:
      type: object
      properties:
        id:
          type: integer
        userID:
          type: integer
        title:
          type: string
        description:
          type: string
        categoryLimit:
          type: array
          items:
            $ref: '#/components/schemas/CategoryLimit'
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserAccount'
    CategoryLimit:
      type: object
      properties:
        id:
          type: integer
        categoryID:
          type: integer
        limitAmount:
          type: integer
        category:
          $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
    ShoppingMemo:
      type: object
      properties:
        id:
          type: integer
        householdID:
          type: integer
        categoryID:
          type: integer
        title:
          type: string
        memo:
          type: string
        isCompleted:
          type: boolean
